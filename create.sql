-- MySQL Script generated by MySQL Workbench
-- Sat Mar 24 14:48:02 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema Tungton
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Tungton
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Tungton` DEFAULT CHARACTER SET utf8 ;
USE `Tungton` ;

-- -----------------------------------------------------
-- Table `Tungton`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Tungton`.`users` (
  `user_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(100) NULL,
  `birthday` DATE NULL,
  `gender` INT NULL,
  `phonenumber` VARCHAR(10) NULL,
  `email` VARCHAR(100) NOT NULL,
  `password` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`user_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Tungton`.`stores`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Tungton`.`stores` (
  `store_id` INT NOT NULL AUTO_INCREMENT,
  `store_name` VARCHAR(100) NOT NULL,
  `store_address` VARCHAR(100) NULL,
  `store_sub_district` VARCHAR(100) NULL,
  `store_district` VARCHAR(100) NULL,
  `store_province` VARCHAR(100) NULL,
  `store_postal_code` VARCHAR(100) NULL,
  PRIMARY KEY (`store_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Tungton`.`user_in_Stores`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Tungton`.`user_in_Stores` (
  `user_id` INT NOT NULL,
  `store_id` INT NOT NULL,
  `user_status` INT NOT NULL,
  PRIMARY KEY (`user_id`, `store_id`),
  INDEX `fk_Users_has_Stores_Stores1_idx` (`store_id` ASC),
  INDEX `fk_Users_has_Stores_Users_idx` (`user_id` ASC),
  CONSTRAINT `fk_Users_has_Stores_Users`
    FOREIGN KEY (`user_id`)
    REFERENCES `Tungton`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Users_has_Stores_Stores1`
    FOREIGN KEY (`store_id`)
    REFERENCES `Tungton`.`stores` (`store_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Tungton`.`products`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Tungton`.`products` (
  `product_id` INT NOT NULL AUTO_INCREMENT,
  `product_barcode` VARCHAR(100) NOT NULL,
  `product_name` VARCHAR(100) NOT NULL,
  `product_brand` VARCHAR(100) NOT NULL,
  `product_manufacturer` VARCHAR(100) NULL,
  `product_size` VARCHAR(100) NULL,
  `product_status` INT NOT NULL,
  PRIMARY KEY (`product_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Tungton`.`product_in_stores`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Tungton`.`product_in_stores` (
  `product_id` INT NOT NULL,
  `store_id` INT NOT NULL,
  `product_quantity` INT NOT NULL,
  `product_minimum_quantity` INT NULL,
  `product_price` DECIMAL(13,4) NOT NULL,
  PRIMARY KEY (`product_id`, `store_id`),
  INDEX `fk_Products_has_Stores_Stores1_idx` (`store_id` ASC),
  INDEX `fk_Products_has_Stores_Products1_idx` (`product_id` ASC),
  CONSTRAINT `fk_Products_has_Stores_Products1`
    FOREIGN KEY (`product_id`)
    REFERENCES `Tungton`.`products` (`product_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Products_has_Stores_Stores1`
    FOREIGN KEY (`store_id`)
    REFERENCES `Tungton`.`stores` (`store_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Tungton`.`product_logs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Tungton`.`product_logs` (
  `product_log_id` INT NOT NULL AUTO_INCREMENT,
  `product_id` INT NOT NULL,
  `store_id` INT NOT NULL,
  `product_log_date` DATETIME NOT NULL,
  `product_log_quantity` INT NOT NULL,
  `product_log_cost` DECIMAL(13,4) NOT NULL,
  `product_log_price` DECIMAL(13,4) NOT NULL,
  PRIMARY KEY (`product_log_id`, `product_id`, `store_id`),
  INDEX `fk_product_logs_stores1_idx` (`store_id` ASC),
  INDEX `fk_product_logs_products1_idx` (`product_id` ASC),
  CONSTRAINT `fk_product_logs_stores1`
    FOREIGN KEY (`store_id`)
    REFERENCES `Tungton`.`stores` (`store_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_product_logs_products1`
    FOREIGN KEY (`product_id`)
    REFERENCES `Tungton`.`products` (`product_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Tungton`.`receipts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Tungton`.`receipts` (
  `receipt_id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `store_id` INT NOT NULL,
  `receipt_date` DATETIME NOT NULL,
  `receipt_total_price` DECIMAL(13,4) NOT NULL,
  `customer_money_paid` DECIMAL(13,4) NOT NULL,
  `receipt_money_change` DECIMAL(13,4) NOT NULL,
  PRIMARY KEY (`receipt_id`, `store_id`, `user_id`),
  INDEX `fk_Receipts_Stores1_idx` (`store_id` ASC),
  INDEX `fk_Receipts_Users1_idx` (`user_id` ASC),
  CONSTRAINT `fk_Receipts_Stores1`
    FOREIGN KEY (`store_id`)
    REFERENCES `Tungton`.`stores` (`store_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Receipts_Users1`
    FOREIGN KEY (`user_id`)
    REFERENCES `Tungton`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Tungton`.`receipt_product_details`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Tungton`.`receipt_product_details` (
  `receipt_id` INT NOT NULL,
  `product_id` INT NOT NULL,
  `receipt_product_sale_quantity` INT NOT NULL,
  `receipt_product_sale_price` DECIMAL(13,4) NOT NULL,
  `receipt_product_total_price` DECIMAL(13,4) NOT NULL,
  PRIMARY KEY (`receipt_id`, `product_id`),
  INDEX `fk_Products_has_Receipts_Receipts1_idx` (`receipt_id` ASC),
  INDEX `fk_Products_has_Receipts_Products1_idx` (`product_id` ASC),
  CONSTRAINT `fk_Products_has_Receipts_Products1`
    FOREIGN KEY (`product_id`)
    REFERENCES `Tungton`.`products` (`product_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Products_has_Receipts_Receipts1`
    FOREIGN KEY (`receipt_id`)
    REFERENCES `Tungton`.`receipts` (`receipt_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
